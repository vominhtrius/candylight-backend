swagger: "2.0"
info:
  version: "0.0.1"
  title: Examination Service
# during dev, should point to your local machine
host: 103.114.107.16:8005
# host: 127.0.0.1:8005
# basePath prefixes all resource paths 
basePath: /api/examination
securityDefinitions:
  auth0:
    type: apiKey
    name: Authorization
    in: header
    description: "Authorization logged to application"
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /exam:
    x-swagger-router-controller: exam
    post:
      description: insert exam in db
      operationId: insertExam
      parameters:
        - name: body
          in: body
          description: field of exam
          schema:
              $ref: "#/definitions/Exam"
      security:
        - auth0: []
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ExamResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /list_exam/{type}/time:
    x-swagger-router-controller: exam
    get:
      description: get list exam of month
      operationId: getListExamInMonth
      parameters:
        - name: type
          in: path
          description: math or vietnamese
          required: true
          type: string
        - name: time
          in: query
          description: time month have format MM_YYYY. such as 08_2018
          required: true
          type: string
      security:
        - auth0: []
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ListExamResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /exam/{examId}:
    x-swagger-router-controller: exam
    put:
      description: update exam in db
      operationId: updateExam
      parameters:
        - name: examId
          in: path
          description: id of exam
          type: string
          required: true
        - name: body
          in: body
          description: field of exam
          schema:
              $ref: "#/definitions/Exam"
      security:
        - auth0: []
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ExamResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    get:
      description: get list question exam in month
      operationId: getListQuestionExamInMonth
      parameters:
        - name: examId
          in: path
          description: id of exam
          required: true
          type: string
      security:
        - auth0: []
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/QuestionExamResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /choice_question:
    x-swagger-router-controller: exam
    post:
      description: insert choice question in db
      operationId: insertChoiceQuestionIntoExam
      parameters:
        - name: body
          in: body
          description: field of exam
          schema:
              $ref: "#/definitions/ChoiceQuestionRequest"
      security:
        - auth0: []
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ExamResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      description: update choice question in db
      operationId: updateChoiceQuestionIntoExam
      parameters:
        - name: body
          in: body
          description: field of exam
          schema:
              $ref: "#/definitions/ChoiceQuestionUpdateRequest"
      security:
        - auth0: []
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ExamResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /fill_question:
    x-swagger-router-controller: exam
    post:
      description: insert fill question in db
      operationId: insertFillQuestionIntoExam
      parameters:
        - name: body
          in: body
          description: field of exam
          schema:
              $ref: "#/definitions/FillQuestionRequest"
      security:
        - auth0: []
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ExamResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      description: update fill question in db
      operationId: updateFillQuestionIntoExam
      parameters:
        - name: body
          in: body
          description: field of exam
          schema:
              $ref: "#/definitions/FillQuestionUpdateRequest"
      security:
        - auth0: []
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ExamResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /info_exam_user/{time}:
    x-swagger-router-controller: exam
    get:
      description: get info exam user in time
      operationId: getInfoUserExam
      parameters:
        - name: time
          in: path
          description: have format MM_YYYY. Such as 08_2018
          type: string
          required: true
      security:
        - auth0: []
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/InfoExamResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /answer/{type}/{examId}:
    x-swagger-router-controller: exam
    post:
      description: verify answer
      operationId: verifyAnwser
      parameters:
        - name: examId
          in: path
          description: id of exam
          required: true
          type: string
        - name: type
          in: path
          description: type math or vietnamese
          required: true
          type: string
        # - name: title
        #   in: path
        #   required: true
        #   type: string
        - name: body
          in: body
          description: field of exam
          schema:
              $ref: "#/definitions/ListAnswer"
      security:
        - auth0: []
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ResultResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /list_point_exam/{numberTopStudent}/time:
    x-swagger-router-controller: exam
    get:
      description: get list pointexam of all users
      operationId: getListPointExam
      parameters:
        - name: numberTopStudent
          in: path
          description: number top student
          required: true
          type: integer
        - name: time
          in: query
          description: time
          required: true
          type: string
      # security:
      #   - auth0: []
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ListPointExamResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /result_point_exam/{userId}/time:
    x-swagger-router-controller: exam
    get:
      description: get result point exam of user in month
      operationId: getResultPointExam
      parameters:
        - name: time
          in: query
          required: true
          type: string
          description: time have format MM_YYYY such as 12_2018
        - name: userId
          in: path
          required: true
          type: string
          description: id of user
          
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/ResultPointExam"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      
  
# complex objects have schema definitions
definitions:
  Exam:
    type: object
    properties:
      type:
        description: type math or vietnamese
        type: string
      time:
        description: time of exam. format MM_YYYY. Such as 08_2018
        type: string
      timeDo:
        description: time do exam. Such as 1800
        type: integer
      numberQuestion:
        description: number question of exam
        type: integer
  QuestionExamResponse:
    type: object
    properties:
      listQuestion:
        description: list choice question in exam
        type: array
        items:
          type: object
          description: if choice question, object have properties (_id, content, answer (ansA, ansB, ansC, ansD), type = 'choice'). if fill question, object have properties (_id, content, type = 'fill')
  ListExamResponse:
    type: object
    properties:
      listExam:
        description: list exam
        type: array
        items: 
          $ref: "#/definitions/ItemExam"
  ItemExam:
    type: object
    properties:
      _id:
        description: id exam
        type: string
      type:
        description: type math or vietnamese
        type: string
      title:
        description: title exam. format Exam0, Exam1,..
        type: string
      time:
        description: time of exam. format MM_YYYY. Such as 08_2018
        type: string
      timeDo:
        description: time do exam. Such as 1800
        type: integer
      numberQuestion:
        description: number question of exam
        type: integer
    
  ChoiceQuestionRequest:
    type: object
    required:
      - examId
    properties:
      examId:
        description: id of exam
        type: string
      content:
        description: content question
        type: string
      answers:
        description: answer hava four choice ansA, ansB, ansC, ansD
        type: object
        properties:
          ansA:
            type: string
          ansB:
            type: string
          ansC:
            type: string
          ansD:
            type: string
      answerRight:
        description: answer right of question
        type: string
  ChoiceQuestionUpdateRequest:
    type: object
    required:
      - examId
      - id
    properties:
      examId:
        description: id of exam
        type: string
      id:
        description: id of question
        type: string
      content:
        description: content question
        type: string
      answers:
        description: answer hava four choice ansA, ansB, ansC, ansD
        type: object
        properties:
          ansA:
            type: string
          ansB:
            type: string
          ansC:
            type: string
          ansD:
            type: string
      answerRight:
        description: answer right of question
        type: string
  FillQuestionRequest:
    type: object
    required:
      - examId
    properties:
      examId:
        description: id of exam
        type: string
      content:
        description: content question
        type: string
      answerRight:
        description: answer right of question
        type: string
  FillQuestionUpdateRequest:
    type: object
    required:
      - examId
      - id
    properties:
      examId:
        description: id of exam
        type: string
      id:
        description: id of question
        type: string
      content:
        description: content question
        type: string
      answerRight:
        description: answer right of question
        type: string
  InfoExamResponse:
    type: object
    properties:
      numberMathExam:
        description: number of exam Math in time
        type: integer
      numberVietnameseExam:
        description: number of exam Vietnamese in time
        type: integer
      listDidMathExam:
        description: list math exam did
        type: array
        items:
          type: string
      listDidVietnameseExam:
        description: list vietnamese did
        type: array
        items:
          type: string
  ListAnswer:
    type: object
    properties:
      listAnswer:
        description: list answer of user
        type: array
        items:
          type: string
  ResultResponse:
    type: object
    properties:
      listCheckedAnswer:
        description: list answer is checked
        type: array
        items: 
          type: string
      numberAnswerRight:
        description: number of answer right
        type: integer
      numberQuestion:
        description: number of question
        type: integer
      point:
        description: point added
        type: number
  ListPointExamResponse:
    type: object
    properties:
      listPointExam:
        description: list point exam Math
        type: array
        items:
          $ref: "#/definitions/ItemPointExam"
  ItemPointExam:
    type: object
    properties:
      userId:
        description: id user 
        type: string
      fullName:
        description: fullName
        type: string
      time:
        description: time
        type: string
      listMathPointExam:
        description: list math point exam
        type: array
        items:
          $ref: "#/definitions/ItemPoint"
      listVietnamesePointExam:
        description: list vietnamese point exam
        type: array
        items:
          $ref: "#/definitions/ItemPoint"
      sumPoint:
        description: sum point
        type: integer
  ItemPoint:
    type: object
    properties:
      title:
        description: title exam
        type: string
      point:
        description: point of exam
        type: number
        
  ResultPointExam:
    type: object
    properties:
      resultPointExam:
        $ref: "#/definitions/ItemPointExam"
      
  ExamResponse:
    required:
      - message
    properties:
      message:
        type: string
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
