swagger: "2.0"
info:
  version: "0.0.1"
  title: Hello World App
# during dev, should point to your local machine
host: localhost:8004
# basePath prefixes all resource paths 
basePath: /api/exercise
# 
securityDefinitions:
  auth0:
    type: apiKey
    name: Authorization
    in: header
    description: "Authorization logged to application"
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /topic/{topicId}/numberquestion:
    x-swagger-router-controller: question
    get:
      description: Returns list questions of topic
      operationId: getListQuestionsOfTopic
      parameters:
        - name: topicId
          in: path
          description: id of topic
          required: true
          type: string
        - name: numberQuestion
          in: query
          description: number question wanted get
          required: true
          type: integer
      security:
      - auth0: []
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ListQuestionOfTopic"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /choicequestion:
    x-swagger-router-controller: question
    post:
      description: insert choice question of Topic
      operationId: insertChoiceQuestionIntoTopic
      parameters:
        - name: body
          in: body
          description: fields of question
          schema:
            $ref: "#/definitions/ChoiceQuestionRequest"           
      security:
      - auth0: []
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/MessageResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

    put:
      description: "update choice question of topic"
      operationId: updateChoiceQuestionOfTopic
      parameters:
        - name: body
          in: body
          description: fields of question
          schema:
            $ref: "#/definitions/ChoiceQuestionUpdateRequest"  
      security:
      - auth0: []
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/MessageResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  
  /fillquestion:
    x-swagger-router-controller: question
    post:
      description: insert fill question of Topic
      operationId: insertFillQuestionIntoTopic
      parameters:
        - name: body
          in: body
          description: fields of question
          schema:
            $ref: "#/definitions/FillQuestionRequest"           
      security:
      - auth0: []
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/MessageResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

    put:
      description: "update question of topic"
      operationId: updateFillQuestionOfTopic
      parameters:
        - name: body
          in: body
          description: fields of question
          schema:
            $ref: "#/definitions/FillQuestionUpdateRequest"  
      security:
      - auth0: []
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/MessageResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /answer/{questionId}:
    x-swagger-router-controller: question
    post:
      description: verify answer
      operationId: verifyAnswer
      parameters:
        - name: questionId
          in: path
          description: id of topic
          required: true
          type: string
        - name: body
          in: body
          description: fields of question
          schema:
            $ref: "#/definitions/AnswerRequest"           
      security:
      - auth0: []
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/AnswerResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  
  /resultexercise/{topicId}:
    x-swagger-router-controller: question
    get:
      description: Returns result exercise of topic
      operationId: getResultExerciseOfTopic
      parameters:
        - name: topicId
          in: path
          description: id of topic
          required: true
          type: string
      security:
      - auth0: []
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ResultExercise"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:
  ListQuestionOfTopic:
    type: object
    properties:
      listChoiceQuestions:
        type: array
        items:
          $ref: "#/definitions/ChoiceQuestionResponse"
      listFillQuestions:
        type: array
        items:
          $ref: "#/definitions/FillQuestionResponse"
          
  ChoiceQuestionResponse:
    type: object
    properties:
      id:
        type: string
      content:
        type: string
      answers:
        type: object
        properties:
          ansA:
            type: string
          ansB:
            type: string
          ansC:
            type: string
          ansD:
            type: string
            
  FillQuestionResponse:
    type: object
    properties:
      id:
        type: string
      content:
        type: string
  
  ChoiceQuestionRequest:
    type: object
    properties:
      topicId:
        type: string
      content:
        type: string
      answers:
        type: object
        properties:
          ansA:
            type: string
          ansB:
            type: string
          ansC:
            type: string
          ansD:
            type: string
      answerRight:
        type: string
      explainRight:
        type: string
      suggest:
        type: string
  
  ChoiceQuestionUpdateRequest:
    type: object
    properties:
      topicId:
        type: string
      id:
        type: string
      content:
        type: string
      answers:
        type: object
        properties:
          ansA:
            type: string
          ansB:
            type: string
          ansC:
            type: string
          ansD:
            type: string
      answerRight:
        type: string
      explainRight:
        type: string
      suggest:
        type: string
  
  FillQuestionRequest:
    type: object
    properties:
      topicId:
        type: string
      content:
        type: string
      answerRight:
        type: string
      explainRight:
        type: string
      suggest:
        type: string
        
  FillQuestionUpdateRequest:
    type: object
    properties:
      topicId:
        type: string
      id:
        type: string
      content:
        type: string
      answerRight:
        type: string
      explainRight:
        type: string
      suggest:
        type: string
  ResultExercise:
    type: object
    required:
      - point
    properties:
      numberQuestion:
        type: integer
      numberAnswerRight:
        type: integer
      point:
        type: integer
  MessageResponse:
    type: object
    required:
      - message
    properties:
      message:
        type: string
        
  AnswerRequest:
    type: object
    required:
      - answer
    properties:
      typeQuestion:
        type: string
      answer:
        type: string
        
  AnswerResponse:
    type: object
    required:
      - result
    properties:
      result:
        type: boolean
      record:
        type: string
        
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
