swagger: "2.0"
info:
  version: "0.0.1"
  title: Quan Ly Du An Phan Men
# during dev, should point to your local machine
#host: 103.114.107.16:8001
host: locahost:8001
# basePath prefixes all resource paths 
basePath: /api
# 
securityDefinitions:
  auth0:
    type: apiKey
    name: Authorization
    in: header
    description: "Authorization logged to application"
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
tags:
- name: "account"
  description: "Everything about authorization your account"
  externalDocs:
    description: "Find out more"
    url: "http://swagger.io"
- name: "profile"
  description: "Operations about profile user"
produces:
  - application/json
paths:
  /account:
    x-swagger-router-controller: accountController
    post:
      tags:
        - account
      description: user sign-in account to application and return access_token to authenticate
      operationId: signin
      parameters:
        - in: body
          name: body
          description: parameters with username & password.
          schema:
            $ref: '#/definitions/UserSignin'     # <----------
      responses:
        "200":
          description: Login Success
          schema:
            $ref: "#/definitions/MessageReturn"
        "401":
          description: Login Fail
          schema:
            $ref: "#/definitions/MessageReturn"
        default:
          description: Login Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      description: user sign-up account to application and return access_token to authenticate
      operationId: signup
      tags:
        - account
      parameters:
        - in: body
          name: body
          description: parameters with username, password, rePassword and email.
          schema:
            $ref: '#/definitions/UserSignup'
      responses:
        "200":
          description: Sign-up Success
          schema:
            $ref: "#/definitions/MessageReturn"
        "401":
          description: Sign-up Fail
          schema:
            $ref: "#/definitions/MessageReturn"
        default:
          description: Sign-up Error
          schema:
            $ref: "#/definitions/ErrorResponse"       
  /account_facebook:
    x-swagger-router-controller: accountController
    post:
      tags:
        - account
      description: user sign-in account to application by facebook
      operationId: signinFB
      parameters:
        - in: body
          name: body
          description: parameters with access_token return when auth in client.
          schema:
            $ref: '#/definitions/UserSigninFB_GG'     # <----------
      responses:
        "200":
          description: Login Success
          schema:
            $ref: "#/definitions/MessageReturn"
        "401":
          description: Login Fail
          schema:
            $ref: "#/definitions/MessageReturn"
        default:
          description: Login Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /account_google:
    x-swagger-router-controller: accountController
    post:
      tags:
        - account
      description: user sign-in account to application by google
      operationId: signinGoogle
      parameters:
        - in: body
          name: body
          description: parameters with access_token return when auth in client
          schema:
            $ref: '#/definitions/UserSigninFB_GG'     # <----------
      responses:
        "200":
          description: Login Success
          schema:
            $ref: "#/definitions/MessageReturn"
        "401":
          description: Login Fail
          schema:
            $ref: "#/definitions/MessageReturn"
        default:
          description: Login Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /account/profile:
    # binds a127 app logic to a route
    x-swagger-router-controller: accountController
    get:
      description: Returns 'Profile account' to the caller
      # used as the method name of the controller
      operationId: getInfo
      tags:
        - profile
      security:
      - auth0: []
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/InfoResponse"
        "401":
          description: Fail
          schema:
            # a pointer to a definition
            $ref: "#/definitions/MessageReturn"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      description: Returns 'Profile account' to the caller
      # used as the method name of the controller
      tags:
        - profile
      operationId: updateInfo
      security:
        - auth0: []
      parameters:
        - in: body
          name: body
          description: The user to sign in with username & password.
          schema:
            $ref: '#/definitions/UserProfile'     # <----------
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/InfoResponse"
        "401":
          description: Fail
          schema:
            # a pointer to a definition
            $ref: "#/definitions/MessageReturn"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"    
definitions:
  UserSignin:
    type: object
    required:
      - userName
      - passWord
    properties:
      userName:
        type: string
      passWord:
        type: string
  UserSigninFB_GG:
    type: object
    required:
      - access_token
    properties:
      access_token:
        type: string
  UserSignup:
    type: object
    required:
      - userName
      - passWord
      - rePassWord
      - email
      - firstName
    properties:
      userName:
        type: string
      passWord:
        type: string
      rePassWord:
        type: string
      email: 
        type: string
      firstName: 
        type: string
  UserProfile:
    type: object
    required:
      - firstName
      - lastName
      - region
      - school
      - capacity
      - firstNameParent
      - lastNameParent
      - emailParent
      - phoneParent
      - regionParent
    properties:
      firstName:
        type: string
      lastName: 
        type: string
      region:
        type: string
      school:
        type: string
      capacity:
        type: string
      firstNameParent: 
        type: string
      lastNameParent:
        type: string
      emailParent: 
        type: string
      phoneParent: 
        type: string
      regionParent: 
        type: string
  InfoResponse: 
    type: object
    properties:
      success: 
        type: boolean
      profile: 
        type: object
        properties:
          userId:
            type: string
          userName:
            type: string
          pointReward:
            type: integer
          firstName:
            type: string
          lastName:
            type: string
          region:
            type: string
          school:
            type: string
          capacity:
            type: string    
          firstNameParent:
            type: string
          lastNameParent:
            type: string
          emailParent:
            type: string 
          phoneParent:
            type: string 
          regionParent:
            type: string 
  MessageReturn:
    type: object
    required: 
      - success
      - message
    properties:
      success:
        type: boolean
      message:
        type: string
      value:
        type: object
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
