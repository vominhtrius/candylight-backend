swagger: "2.0"
info:
  version: "0.0.1"
  title: Quan Ly Du An Phan Men
# during dev, should point to your local machine
host: localhost:8003
# basePath prefixes all resource paths 
basePath: /api/learning
# 
securityDefinitions:
  auth0:
    type: apiKey
    name: Authorization
    in: header
    description: "Authorization logged to application"
schemes:
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /lessons:
    x-swagger-router-controller: lesson
    get:
      description: Returns all lesson
      operationId: getLessons
      tags:
        - lesson
      security:
        - auth0: []
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/MessageResp"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      description: Add new lesson
      operationId: addLesson
      tags:
        - lesson
      security:
        - auth0: []
      parameters:
        - in: body
          name: body
          description: parameters with content, topic, category, title in new lesson .
          schema:
            $ref: '#/definitions/LessonReq'
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/MessageResp"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /lessons/{lessonId}:
    x-swagger-router-controller: lesson
    get:
      description: Returns lesson info with parameters lessonId
      operationId: findOneLesson
      tags:
        - lesson
      security:
        - auth0: []
      parameters:
        - in: path
          name: lessonId
          type: string
          required: true
          description: id lesson
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/MessageResp"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      description: Update lesson info
      operationId: updateLesson
      tags:
        - lesson
      security:
        - auth0: []
      parameters:
        - in: path
          name: lessonId
          type: string
          required: true
          description: id lesson
        - in: body
          name: body
          description: parameters with content, topic, category, title in new lesson.
          schema:
            $ref: '#/definitions/LessonReq'
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/MessageResp"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /topics:
    x-swagger-router-controller: topic
    get:
      description: Returns all topic
      operationId: getAllTopic
      tags:
        - topic
      security:
        - auth0: []
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/MessageResp"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      description: Add new topic
      operationId: addTopic
      tags:
        - topic
      security:
        - auth0: []
      parameters:
        - in: body
          name: body
          description: parameters with name, category.
          schema:
            $ref: '#/definitions/TopicReq'
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/MessageResp"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /topics/{topicId}:
    # binds a127 app logic to a route
    x-swagger-router-controller: topic
    get:
      description: Returns topic info with parameters topicId
      operationId: getOneTopic
      tags:
        - topic
      security:
        - auth0: []
      parameters:
        - in: path
          name: topicId
          type: string
          required: true
          description: id topic
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/MessageResp"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      description: Update topic info
      operationId: updateTopic
      tags:
        - topic
      security:
        - auth0: []
      parameters:
        - in: path
          name: topicId
          type: string
          required: true
          description: id topic
        - in: body
          name: body
          description: parameters with name, category.
          schema:
            $ref: '#/definitions/TopicReq'
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/MessageResp"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /categorys:
    # binds a127 app logic to a route
    x-swagger-router-controller: category
    get:
      description: Returns all topic
      operationId: getAll
      tags:
        - category
      security:
        - auth0: []
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/MessageResp"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      description: Add new topic
      operationId: add
      tags:
        - category
      security:
        - auth0: []
      parameters:
        - in: body
          name: body
          description: parameters with name
          schema:
            $ref: '#/definitions/CategoryReq'
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/MessageResp"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /categorys/{categoryId}:
    # binds a127 app logic to a route
    x-swagger-router-controller: category
    get:
      description: Returns category info with parameters by categoryId
      operationId: getOne
      tags:
        - category
      security:
        - auth0: []
      parameters:
        - in: path
          name: categoryId
          type: string
          required: true
          description: Id category
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/MessageResp"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      description: Update category info 
      operationId: update
      tags:
        - category
      security:
        - auth0: []
      parameters:
        - in: path
          name: categoryId
          type: string
          required: true
          description: description of paramete
        - in: body
          name: body
          description: parameters with name.
          schema:
            $ref: '#/definitions/CategoryReq'
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/MessageResp"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:
  LessonReq:
    required:
      - title
      - content
      - topicId
      - categoryId
    properties:
      content:
        type: string
      topicId:
        type: string
      categoryId:
        type: string
      title:
        type: string
  TopicReq:
    required:
      - name
      - categoryId
    properties:
      name:
        type: string
      categoryId:
        type: string
  CategoryReq:
    required:
      - name
    properties:
      name:
        type: string
  MessageResp:
    type: object
    required: 
      - success
    properties:
      success:
        type: boolean
      message:
        type: string
      value:
        type: object
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
